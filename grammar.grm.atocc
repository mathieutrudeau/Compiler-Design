START -> structOrImplOrFunction START 
START -> EPSILON 

addOperator -> '+' 
addOperator -> '-' 
addOperator -> 'or' 

argumentParameters -> expression repetitiveArgumentParametersTail 
argumentParameters -> EPSILON 

argumentParametersTail -> ',' expression 

arithmeticExpression -> term recursiveArithmeticExpression 

arraySize -> '[' arraySizeContent 

arraySizeContent -> 'intNum' ']' 
arraySizeContent -> ']' 

assignmentOperator -> '=' 

expression -> arithmeticExpression optionalRelationalExpression 

factor -> 'id' factorAlt repetitiveVariableOrFunctionCall 
factor -> 'intLit' 
factor -> 'floatLit' 
factor -> '(' arithmeticExpression ')' 
factor -> 'not' factor 
factor -> sign factor 

factorAlt -> '(' argumentParameters ')' 
factorAlt -> repetitiveIndices 

functionBody -> '{' repetitiveVariableDeclarationOrStatements '}' 

functionDeclaration -> functionHeader ';' 

functionDefinition -> functionHeader functionBody 

functionHeader -> 'func' 'id' '(' funtionParameters ')' '->' returnType 

functionParametersTail -> ',' 'id' ':' type repetitiveArraySizes 

funtionParameters -> 'id' ':' type repetitiveArraySizes repetitiveFunctionParametersTails 
funtionParameters -> EPSILON 

idnest -> '.' 'id' idnestRest 

idnestRest -> '(' argumentParameters ')' 
idnestRest -> repetitiveIndices 

implDefinition -> 'impl' 'id' '{' repetitiveFunctionDefinitions '}' 

indice -> '[' arithmeticExpression ']' 

memberDeclaration -> functionDeclaration 
memberDeclaration -> variableDeclaration 

multOperator -> '*' 
multOperator -> '/' 
multOperator -> 'and' 

optionalAssignment -> assignmentOperator 
optionalAssignment -> EPSILON 

optionalRelationalExpression -> relationalOperator arithmeticExpression 
optionalRelationalExpression -> EPSILON 

recursiveArithmeticExpression -> EPSILON 
recursiveArithmeticExpression -> addOperator term recursiveArithmeticExpression 

recursiveTerms -> multOperator factor recursiveTerms 
recursiveTerms -> EPSILON 

relationalExpression -> arithmeticExpression relationalOperator arithmeticExpression 

relationalOperator -> 'eq' 
relationalOperator -> 'neq' 
relationalOperator -> 'lt' 
relationalOperator -> 'gt' 
relationalOperator -> 'leq' 
relationalOperator -> 'geq' 

repetitiveArgumentParametersTail -> argumentParametersTail repetitiveArgumentParametersTail 
repetitiveArgumentParametersTail -> EPSILON 

repetitiveArraySizes -> arraySize repetitiveArraySizes 
repetitiveArraySizes -> EPSILON 

repetitiveFunctionDefinitions -> functionDefinition repetitiveFunctionDefinitions 
repetitiveFunctionDefinitions -> EPSILON 

repetitiveFunctionParametersTails -> functionParametersTail repetitiveFunctionParametersTails 
repetitiveFunctionParametersTails -> EPSILON 

repetitiveIndices -> indice repetitiveIndices 
repetitiveIndices -> EPSILON 

repetitiveStatements -> statement repetitiveStatements 
repetitiveStatements -> EPSILON 

repetitiveStructMemberDeclarations -> visibility memberDeclaration repetitiveStructMemberDeclarations 
repetitiveStructMemberDeclarations -> EPSILON 

repetitiveStructOptionalInheritances -> ',' 'id' repetitiveStructOptionalInheritances 
repetitiveStructOptionalInheritances -> EPSILON 

repetitiveVariableDeclarationOrStatements -> variableDeclarationOrStatement repetitiveVariableDeclarationOrStatements 
repetitiveVariableDeclarationOrStatements -> EPSILON 

repetitiveVariableOrFunctionCall -> idnest repetitiveVariableOrFunctionCall 
repetitiveVariableOrFunctionCall -> EPSILON 

repetitiveVariables -> variableIdnest repetitiveVariables 
repetitiveVariables -> EPSILON 

returnType -> type 
returnType -> 'void' 

sign -> '+' 
sign -> '-' 

statement -> 'id' factorAlt repetitiveVariableOrFunctionCall optionalAssignment ';' 
statement -> 'if' '(' relationalExpression ')' 'then' statementBlock 'else' statementBlock ';' 
statement -> 'while' '(' relationalExpression ')' statementBlock ';' 
statement -> 'read' '(' variable ')' ';' 
statement -> 'write' '(' expression ')' ';' 
statement -> 'return' '(' expression ')' ';' 

statementBlock -> '{' repetitiveStatements '}' 
statementBlock -> statement 
statementBlock -> EPSILON 

structDeclaration -> 'struct' 'id' structOptionalInheritance '{' repetitiveStructMemberDeclarations '}' ';' 

structOptionalInheritance -> 'inherits' 'id' repetitiveStructOptionalInheritances 
structOptionalInheritance -> EPSILON 

structOrImplOrFunction -> structDeclaration 
structOrImplOrFunction -> implDefinition 
structOrImplOrFunction -> functionDefinition 

term -> factor recursiveTerms 

type -> 'integer' 
type -> 'float' 
type -> 'id' 

variable -> 'id' variableRest 

variableDeclaration -> 'let' 'id' ':' type repetitiveArraySizes ';' 

variableDeclarationOrStatement -> variableDeclaration 
variableDeclarationOrStatement -> statement 

variableIdnest -> '.' 'id' variableIdnestRest 

variableIdnestRest -> '(' argumentParameters ')' variableIdnest 
variableIdnestRest -> repetitiveIndices 

variableRest -> repetitiveIndices repetitiveVariables 
variableRest -> '(' argumentParameters ')' variableIdnest 

visibility -> 'public' 
visibility -> 'private' 