[eq, ==, 1] [plus, +, 1] [or, |, 1] [openpar, (, 1] [semi, ;, 1] [if, if, 1] [public, public, 1] [read, read, 1] 
[noteq, <>, 2][minus, -, 2] [and, &, 2] [closepar, ), 2] [comma, ,, 2] [then, then, 2] [private, private, 2] [write, write, 2] 
[lt, <, 3][mult, *, 3] [not, !, 3] [opencubr, {, 3] [dot, ., 3] [else, else, 3] [func, func, 3] [return, return, 3] 
[gt, >, 4][div, /, 4] [closecubr, }, 4] [colon, :, 4] [integer, integer, 4] [var, var, 4] [self, self, 4] 
[leq, <=, 5][assign, =, 5] [opensqbr, [, 5] [colon, :, 5] [float, float, 5] [struct, struct, 5] [inherits, inherits, 5] 
[geq, >=, 6][closesqbr, ], 6] [arrow, ->, 6] [void, void, 6] [while, while, 6] [let, let, 6] 
[func, func, 7][impl, impl, 7] 
[intnum, 0, 13]
[intnum, 1, 14]
[intnum, 10, 15]
[intnum, 12, 16]
[intnum, 123, 17]
[intnum, 12345, 18]
[floatnum, 1.23, 20]
[floatnum, 12.34, 21]
[floatnum, 120.34e10, 22]
[floatnum, 12345.6789e-123, 23]
[id, abc, 25]
[id, abc1, 26]
[id, a1bc, 27]
[id, abc_1abc, 28]
[id, abc1_abc, 29]
[inlinecmt, // this is an inline comment, 31]
[blockcmt, /* this is a single line block comment */, 33]
[blockcmt, /* this is a \nmultiple line\nblock comment \n*/, 35]
[blockcmt, /* this is an imbricated \n/* block comment\n*/\n*/, 40]