<START> 
<prog> 'eof' 
<rept-prog0> 'eof' 
<structOrImplOrfunc> <rept-prog0> 'eof' 
<funcDef> <rept-prog0> 'eof' 
<funcHead> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' <fParams> ')' 'arrow' <returnType> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' <returnType> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' <varDecl> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' <type> <rept-varDecl4> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' <rept-varDecl4> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' <aParams> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' <aParams> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' <expr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' <arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' <addOp> <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' <aParamsTail> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' <expr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' <arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' <relOp> <arithExpr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' <arithExpr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' <term> <rightrec-arithExpr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' <factor> <rightRecTerm> <rightrec-arithExpr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' <rightRecTerm> <rightrec-arithExpr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' <rightrec-arithExpr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' <varDecl> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' <type> <rept-varDecl4> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' <rept-varDecl4> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' <arraySize> <rept-varDecl4> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' <arraySize2> <rept-varDecl4> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' <rept-varDecl4> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' <aParams> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' <expr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' <arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' <aParams> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' <expr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' <arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' <indice> <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' <arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' <indice> <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' <arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' <aParams> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' <expr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' <arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' <assignOp> <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' <arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' <aParams> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' <expr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' <arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' <aParams> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' <assignOp> <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' <arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' <assignOp> <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' <arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' <assignOp> <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' <arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' <assignOp> <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' <assignOp> <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' <arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' <assignOp> <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' <aParams> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' <expr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' <arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' <assignOp> <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' <arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' <aParams> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' <expr> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' <arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <expr2> <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' <rept-aParams1> ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' <statement-Id-nest2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' <assignOp> <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' <statement-Id-nest> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' <indice> <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' <arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' <addOp> <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' <addOp> <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' <term> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' <multOp> <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' <multOp> <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' <rightrec-arithExpr> ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' <rept-idnest1> <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' <statement-Id-nest3> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' <assignOp> <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' <expr> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' <arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' <rightrec-arithExpr> <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' <expr2> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' <relExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' <arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' <term> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' <addOp> <term> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' <term> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' <factor> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' <multOp> <factor> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' <factor> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' <term> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' <factor> <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' <arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' <multOp> <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' <arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' <addOp> <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' <relExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' <arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' <term> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' <term> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' <factor> <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' <factor> <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' <relExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' <arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' <term> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' <term> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' <factor> <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' <arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' <sign> <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' <addOp> <term> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' <term> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' <factor> <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' <arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' <sign> <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' <expr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' <arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' <term> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' <arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' <aParams> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' <expr> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' <arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' <term> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' <idNest> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' <idNest2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' <indice> <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' <arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' <term> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' <factor> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' <rightRecTerm> <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' <rightrec-arithExpr> ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' <rightRecTerm> <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' <rightrec-arithExpr> <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' <expr2> <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' <rept-aParams1> ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' <addOp> <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' <rightrec-arithExpr> <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' <expr2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' <relOp> <arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' <arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' <term> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' <factor> <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' <arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' <arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' <addOp> <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' <addOp> <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' <multOp> <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' <arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' <sign> <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' <multOp> <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' <arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' <term> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' <sign> <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' <rightRecTerm> <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' <rightrec-arithExpr> ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' <rightRecTerm> <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' <rightrec-arithExpr> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' <structOrImplOrfunc> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' <funcDef> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' <funcHead> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' <fParams> ')' 'arrow' <returnType> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' <returnType> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' <type> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' <structOrImplOrfunc> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' <funcDef> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' <funcHead> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' <fParams> ')' 'arrow' <returnType> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' <returnType> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' <type> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' <variable> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' <variable2> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' <rept-idnest1> <rept-variable> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' <rept-variable> ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' <structOrImplOrfunc> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' <funcDef> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' <funcHead> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' <fParams> ')' 'arrow' <returnType> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' <returnType> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' <type> <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' <funcBody> <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' <relExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' <arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' <term> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' <rightrec-arithExpr> <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' <relOp> <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' <arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' <term> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' <factor> <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' <rightrec-arithExpr> ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' <statBlock> 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' <statement> <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' <statement-Id-nest> ';' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' <assignOp> <expr> ';' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' <expr> ';' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' <arithExpr> <expr2> ';' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' <expr2> ';' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' <rept-statBlock1> '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' <statement> <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' <statement-Id-nest> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' <assignOp> <expr> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' <expr> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' <arithExpr> <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' <relExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' <arithExpr> <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' <term> <rightrec-arithExpr> <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' <rightrec-arithExpr> <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' <term> <rightrec-arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' <rightrec-arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' <varDecl> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' <type> <rept-varDecl4> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' <rept-varDecl4> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' <varDeclOrStat> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' <statement> <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' <relExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' <arithExpr> <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' <term> <rightrec-arithExpr> <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' <rightRecTerm> <rightrec-arithExpr> <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' <rightrec-arithExpr> <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' <relOp> <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' <arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' <term> <rightrec-arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' <factor> <rightRecTerm> <rightrec-arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' <rightRecTerm> <rightrec-arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' <rightrec-arithExpr> ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' <statBlock> ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' <statement> <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' <statement-Id-nest> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' <assignOp> <expr> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' <expr> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' <arithExpr> <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' <term> <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' <rightRecTerm> <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' <rightrec-arithExpr> <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' <expr2> ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' <statement> <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' <expr> ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' <arithExpr> <expr2> ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' <term> <rightrec-arithExpr> <expr2> ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' <factor> <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' 'id' <factor2> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' 'id' <rept-idnest1> <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' 'id' <rept-var-or-funcCall> <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' 'id' <rightRecTerm> <rightrec-arithExpr> <expr2> ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' 'id' <rightrec-arithExpr> <expr2> ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' 'id' <expr2> ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' 'id' ')' ';' <rept-statBlock1> '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
'func' 'id' '(' ')' 'arrow' 'void' '{' 'let' 'id' ':' 'float' ';' 'id' '(' ')' ';' 'id' '(' 'intlit' '+' 'intlit' ',' 'intlit' 'gt' 'intlit' ')' ';' 'let' 'id' ':' 'float' '[' 'intlit' ']' ';' 'id' '(' 'id' ')' ';' 'id' '(' 'id' '[' 'intlit' ']' '[' 'intlit' ']' ')' ';' 'id' '(' 'id' ')' '.' 'id' '=' 'intlit' ';' 'id' '(' 'id' ')' '.' 'id' '(' ')' ';' 'id' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '=' 'id' ';' 'id' '[' 'id' ']' '[' 'id' ']' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '=' 'id' ';' 'id' '(' 'id' ')' '.' 'id' '[' 'id' ']' '[' 'id' ']' '=' 'id' ';' 'id' '[' 'intlit' '+' 'intlit' '-' 'intlit' '*' 'intlit' '/' 'intlit' ']' '=' 'intlit' ';' 'if' '(' 'intlit' '+' 'intlit' '*' 'intlit' 'gt' '(' 'intlit' '/' '(' 'intlit' '-' 'intlit' ')' ')' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'neq' 'not' 'intlit' ')' 'then' 'else' ';' 'if' '(' 'intlit' 'geq' '(' '-' 'intlit' ')' '+' '(' '+' 'intlit' ')' ')' 'then' 'else' ';' 'return' '(' '(' 'id' '(' 'id' '.' 'id' '[' 'id' ']' ')' '+' 'not' 'id' ')' 'eq' '(' '(' 'intlit' '+' 'intlit' '-' 'intlit' ')' '*' '(' '-' 'intlit' ')' '/' '(' '+' 'intlit' ')' ')' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'read' '(' 'id' ')' ';' '}' 'func' 'id' '(' ')' 'arrow' 'id' '{' 'if' '(' 'id' 'gt' 'intlit' ')' 'then' '{' 'id' '=' 'intlit' ';' '}' 'else' '{' 'id' '=' 'intlit' ';' '}' ';' 'while' '(' 'intlit' 'neq' 'intlit' ')' ';' 'let' 'id' ':' 'integer' ';' 'while' '(' 'intlit' 'lt' 'intlit' ')' '{' 'id' '=' 'intlit' ';' 'write' '(' 'id' ')' ';' '}' ';' <rept-funcBody1> '}' <rept-prog0> 'eof' 
