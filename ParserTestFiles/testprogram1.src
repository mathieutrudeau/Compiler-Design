/* This is a sample program */
// This is an inline


struct a  inherits b,c,d
{ 
  private let a : string; 
  public let b : float;
  public let c : float[2][][][];
  public func f() -> void;
  private func f() -> float;
  private func f( a:float[1],d:integer[],g:float) -> newType;
};


impl B {
func A () -> void {
  let a : integer;
}
func A () -> void {

}
}


// Illegal Array as return type
func ILL () -> float[]
{

}

func A (
a:float[][2][],sd:s[3]
) -> void
{
let a : integer[2];


return (3);
return (3.4);
return (!3);
return (+3);
return (-3.9);
//return ((3+2-1*3/4));
//return (3 | (3 & 4.2));
//write (3 + 3 * 4 -1);

//while(3 + 3 <= (3.4));

/*
if(3<>4) then 
{
  return (-3.9);
   return (-3.9);
}
else 
{
  return (-3.9);
  return (-3.9);
}
;
*/

let a: a;

read (a.aa(1>2,1-1,2==(3*2-2)).a[a[2][a].a().a(a>a)]);


a = a.a().a(a>3);

a[a].a();

a=3.1;

//a().a[2];

a=++3+2;

// Illegal array definition ** No size
let a: integer[a];


let;

}
struct s


