<START> 
<structOrImplOrFunction> <START> 
<structDeclaration> <START> 
'struct' 'id' <structOptionalInheritance> '{' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' <repetitiveStructOptionalInheritances> '{' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' <repetitiveStructOptionalInheritances> '{' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' <repetitiveStructOptionalInheritances> '{' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' <visibility> <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' <variableDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' <visibility> <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' <variableDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' <visibility> <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' <variableDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' <arraySize> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' <arraySizeContent> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' <arraySize> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' <arraySizeContent> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' <arraySize> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' <arraySizeContent> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' <arraySize> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' <arraySizeContent> <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' <repetitiveArraySizes> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' <visibility> <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' <functionDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' <functionHeader> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' <funtionParameters> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' <visibility> <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' <functionDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' <functionHeader> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' <funtionParameters> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' <type> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' <visibility> <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' <memberDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' <functionDeclaration> <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' <functionHeader> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' <funtionParameters> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' <type> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' <arraySize> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' <arraySizeContent> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' <functionParametersTail> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' <type> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' <arraySize> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' <arraySizeContent> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' <functionParametersTail> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' <type> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' <repetitiveFunctionParametersTails> ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' <returnType> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' <type> ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' <repetitiveStructMemberDeclarations> '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' <structOrImplOrFunction> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' <implDefinition> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' <functionDefinition> <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' <functionHeader> <functionBody> <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' <funtionParameters> ')' '->' <returnType> <functionBody> <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' <returnType> <functionBody> <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' <functionBody> <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' <repetitiveVariableDeclarationOrStatements> '}' <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' <variableDeclaration> <repetitiveVariableDeclarationOrStatements> '}' <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' <repetitiveVariableDeclarationOrStatements> '}' <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' <functionDefinition> <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' <functionHeader> <functionBody> <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' <funtionParameters> ')' '->' <returnType> <functionBody> <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' <returnType> <functionBody> <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' <functionBody> <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' <repetitiveVariableDeclarationOrStatements> '}' <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' <repetitiveFunctionDefinitions> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' <structOrImplOrFunction> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' <functionDefinition> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' <functionHeader> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' <funtionParameters> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' <type> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' <arraySize> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' <arraySizeContent> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' <arraySize> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' <arraySizeContent> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' <arraySize> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' <arraySizeContent> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' <functionParametersTail> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' <type> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' <arraySize> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' <arraySizeContent> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' <returnType> <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' <functionBody> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' <variableDeclaration> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' <arraySize> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' <arraySizeContent> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' <expression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' <arithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' <expression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' <arithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' <expression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' <arithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' <expression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' <arithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' <sign> <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' <expression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' <arithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' <sign> <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' <optionalRelationalExpression> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' <variableDeclaration> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' <variable> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' <variableRest> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' <variableIdnestRest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' <argumentParameters> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' <expression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' <relationalOperator> <arithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' <arithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' <term> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' <factor> <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' <argumentParametersTail> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' <expression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' <addOperator> <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' <argumentParametersTail> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' <expression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' <relationalOperator> <arithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' <arithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' <term> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' <factor> <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' <arithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' <term> <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' <multOperator> <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' <addOperator> <term> <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' <term> <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' <recursiveArithmeticExpression> ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' <repetitiveArgumentParametersTail> ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' <variableIdnest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' <variableIdnestRest> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' <indice> <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' <arithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' <indice> <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' <arithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' <indice> <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' <arithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' <idnest> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' <idnestRest> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' <argumentParameters> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' <idnest> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' <idnestRest> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' <argumentParameters> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' <expression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' <relationalOperator> <arithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' <arithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' <term> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' <factor> <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' <repetitiveIndices> <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' <repetitiveVariables> ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' <idnest> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' <idnestRest> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' <argumentParameters> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' <idnest> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' <idnestRest> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' <argumentParameters> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' <expression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' <relationalOperator> <arithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' <arithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' <term> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' <factor> <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' <recursiveArithmeticExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' <indice> <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' <arithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' <idnestStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' <idnestRestStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' <argumentParameters> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' <sign> <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' <sign> <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' <addOperator> <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' '+' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' '+' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' '+' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' '+' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' '+' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' '+' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' '+' 'intLit' ';' '}' <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' '+' 'intLit' ';' '}' <structOrImplOrFunction> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' '+' 'intLit' ';' '}' <structDeclaration> <START> 
'struct' 'id' 'inherits' 'id' ',' 'id' ',' 'id' '{' 'private' 'let' 'id' ':' 'id' ';' 'public' 'let' 'id' ':' 'float' ';' 'public' 'let' 'id' ':' 'float' '[' 'intNum' ']' '[' ']' '[' ']' '[' ']' ';' 'public' 'func' 'id' '(' ')' '->' 'void' ';' 'private' 'func' 'id' '(' ')' '->' 'float' ';' 'private' 'func' 'id' '(' 'id' ':' 'float' '[' 'intNum' ']' ',' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'float' ')' '->' 'id' ';' '}' ';' 'impl' 'id' '{' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' '}' '}' 'func' 'id' '(' 'id' ':' 'float' '[' ']' '[' 'intNum' ']' '[' ']' ',' 'id' ':' 'id' '[' 'intNum' ']' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'return' '(' 'intLit' ')' ';' 'return' '(' 'floatLit' ')' ';' 'return' '(' 'not' 'intLit' ')' ';' 'return' '(' '+' 'intLit' ')' ';' 'return' '(' '-' 'floatLit' ')' ';' 'let' 'id' ':' 'id' ';' 'read' '(' 'id' '.' 'id' '(' 'intLit' 'gt' 'intLit' ',' 'intLit' '-' 'intLit' ',' 'intLit' 'eq' '(' 'intLit' '*' 'intLit' '-' 'intLit' ')' ')' '.' 'id' '[' 'id' '[' 'intLit' ']' '[' 'id' ']' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'id' ')' ']' ')' ';' 'id' '=' 'id' '.' 'id' '(' ')' '.' 'id' '(' 'id' 'gt' 'intLit' ')' ';' 'id' '[' 'id' ']' '.' 'id' '(' ')' ';' 'id' '=' 'floatLit' ';' 'id' '=' '+' '+' 'intLit' '+' 'intLit' ';' '}' 'struct' 'id' <structOptionalInheritance> '{' <repetitiveStructMemberDeclarations> '}' ';' <START> 
