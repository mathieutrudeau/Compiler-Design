<START> 
<structOrImplOrFunction> <START> 
<functionDefinition> <START> 
<functionHeader> <functionBody> <START> 
'func' 'id' '(' <funtionParameters> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' <type> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' <arraySize> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' <arraySizeContent> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' <functionParametersTail> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' <type> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' <variableDeclaration> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' <variableDeclaration> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <variableDeclaration> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <variableDeclaration> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' <relationalExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' <arithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' <term> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' <term> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' <addOperator> <term> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' <term> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' <statement> <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' <relationalExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' <arithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' <term> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' <arithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' <term> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' <addOperator> <term> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' <term> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' <addOperator> <term> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' <term> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' <statement> <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' <relationalExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' <arithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' <term> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' <indice> <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' <arithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' <relationalOperator> <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' <arithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' <term> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' <indice> <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' <arithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' <addOperator> <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' <recursiveTerms> <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' <recursiveArithmeticExpression> ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' <statementBlock> 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' <statement> <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' <statementAlt> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' <assignmentOperator> <expression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' <expression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' <indice> <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' <arithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' <statement> <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' <statementAlt> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' <indice> <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' <arithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' <assignmentOperator> <expression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' <expression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' <indice> <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' <arithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' <addOperator> <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' <statement> <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' <statementAlt> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' <indice> <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' <arithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' <addOperator> <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' <assignmentOperator> <expression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' <expression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' <optionalRelationalExpression> ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' <repetitiveStatements> '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' <statementBlock> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' <statement> <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' <statementAlt> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' <expression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' <addOperator> <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' <repetitiveStatements> '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' <statement> <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' <statementAlt> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' <expression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' <addOperator> <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' <structOrImplOrFunction> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' <functionDefinition> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' <functionHeader> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' <funtionParameters> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' <type> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' <arraySize> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' <arraySizeContent> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' <functionParametersTail> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' <type> <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' <repetitiveArraySizes> <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' <repetitiveFunctionParametersTails> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' <variableDeclaration> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' <variableDeclaration> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' <relationalExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' <arithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' <term> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' <recursiveTerms> <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' <recursiveArithmeticExpression> <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' <relationalOperator> <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' <arithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' <term> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' <factor> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' <recursiveTerms> <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' <recursiveArithmeticExpression> ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' <statementBlock> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' <statement> <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' <expression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' <arithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' <indice> <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' <arithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' <recursiveArithmeticExpression> ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' <repetitiveIndices> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' <recursiveArithmeticExpression> <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' <optionalRelationalExpression> ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' <statement> <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' <statementAlt> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' <assignmentOperator> <expression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' <expression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' <addOperator> <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' <optionalRelationalExpression> ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' <repetitiveStatements> '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' <structOrImplOrFunction> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' <functionDefinition> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' <functionHeader> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' <funtionParameters> ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' <returnType> <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' <functionBody> <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' <variableDeclaration> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' <type> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' <arraySize> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' <arraySizeContent> <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' <repetitiveArraySizes> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' <indice> <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' <arithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <indice> <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <arithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <indice> <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <arithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <indice> <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <arithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <indice> <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <arithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <indice> <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <arithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <indice> <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <arithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <term> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' <factor> <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' <recursiveArithmeticExpression> ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveIndicesStat> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <repetitiveVariableOrFunctionCallStat_Var> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' <assignmentOperator> <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <expression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <arithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' <optionalRelationalExpression> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' <argumentParameters> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' <expression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' <argumentParametersTail> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' <expression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' <argumentParameters> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' <expression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <argumentParametersTail> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' <expression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' <variableDeclarationOrStatement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' <statement> <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' <statementAlt> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' <argumentParameters> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' <expression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <factorAlt> <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <repetitiveVariableOrFunctionCall> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' <argumentParametersTail> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' <expression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' <arithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' <term> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' <factor> <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' <recursiveTerms> <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' <recursiveArithmeticExpression> <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' <optionalRelationalExpression> <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' <repetitiveArgumentParametersTail> ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' <repetitiveVariableOrFunctionCallStat_Function> ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' <repetitiveVariableDeclarationOrStatements> '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' '}' <START> 
'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' '-' 'intLit' ')' '{' 'while' '(' 'id' 'lt' 'id' '-' 'id' '-' 'intLit' ')' '{' 'if' '(' 'id' '[' 'id' ']' 'gt' 'id' '[' 'id' '+' 'intLit' ']' ')' 'then' '{' 'id' '=' 'id' '[' 'id' ']' ';' 'id' '[' 'id' ']' '=' 'id' '[' 'id' '+' 'intLit' ']' ';' 'id' '[' 'id' '+' 'intLit' ']' '=' 'id' ';' '}' 'else' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' 'id' ':' 'integer' '[' ']' ',' 'id' ':' 'integer' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' ';' 'let' 'id' ':' 'integer' ';' 'id' '=' 'id' ';' 'id' '=' 'intLit' ';' 'while' '(' 'id' 'lt' 'id' ')' '{' 'write' '(' 'id' '[' 'id' ']' ')' ';' 'id' '=' 'id' '+' 'intLit' ';' '}' ';' '}' 'func' 'id' '(' ')' '->' 'void' '{' 'let' 'id' ':' 'integer' '[' 'intNum' ']' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '[' 'intLit' ']' '=' 'intLit' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' 'id' '(' 'id' ',' 'intLit' ')' ';' '}' 
